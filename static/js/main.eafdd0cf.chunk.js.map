{"version":3,"sources":["Components/Question.js","Utility/auxiliary.js","Containers/Quiz.js","Components/Answer.js","Containers/Answers.js","Utility/authentication.js","Containers/Auth.js","Assets/Quizzes/introQuiz.js","Components/QuizList.js","Components/Nav.js","Components/HwItem.js","Assets/Quizzes/testQuiz.js","Components/Homework.js","Components/Exercises.js","Components/Reading.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["question","props","radioStyle","padding","radioButtonStyle","cursor","top","left","height","width","borderRadius","backgroundColor","opacity","answers","map","item","index","style","key","name","type","value","font","border","className","margin","display","flexFlow","alignItems","id","questionId","paddingLeft","instance","axios","create","baseURL","Quiz","state","content","testIsComplete","completeTest","console","log","this","location","array","quiz","i","length","push","correctAnswerIndex","setState","loaded","e","completeTestCopy","questionObject","answerCode","selected","target","complete","arguments","correctAnswerList","displayAnswers","displayQuiz","preventDefault","checked","answer","getAttribute","correct","errorMessage","j","testComplete","post","completedAt","Date","then","res","catch","err","questions","Question","marginLeft","onSubmit","handleFormSubmit","color","Component","answerStyle","marginBottom","fontSize","Auth","controls","email","elementType","elementConfig","login","placeholder","validation","required","isEmail","valid","touched","firstname","minLength","password","confirmPassword","isSignup","checkValidity","rules","isValid","trim","maxLength","test","isNumeric","handleSubmit","loadingStart","data","doneLoading","Error","authData","returnSecureToken","onAuth","idToken","localId","expiresIn","inputChangedHandler","event","controlName","updatedControls","prevState","clearControls","controlsCopy","requestType","authRedirect","validAuth","to","form","formElementsArray","config","formElement","elementtype","elementconfig","onChange","onClick","toggleAuthModeHandler","QuizList","listContent","quizzes","pathname","fromHomeworkPage","description","Nav","defaultStyle","transition","transform","transitionStyles","entering","entered","exiting","exited","Transition","in","showNavBar","timeout","onLogout","href","toggleNavBar","HwItem","title","formHomeworkPage","testQuiz","Homework","Math","random","Exercises","Reading","About","App","isAuthenticated","nameEntered","hideRegister","loading","window","scrollTo","checkAuthState","expirationTime","setTimeout","logoutHandler","token","localStorage","getItem","expirationDate","checkAuthTimeout","getTime","setItem","stopLoading","removeItem","beganAt","error","routes","exact","path","render","startLoading","handleAuthSubmit","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eafdd0cf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction question(props) {\r\n\r\nconst questionStyle = {\r\n  border: '1px black solid',\r\n  borderRadius: '20px',\r\n  margin: '20px',\r\n  padding: '20px',\r\n  display: 'flex',\r\n  flexFlow: 'nowrap column',\r\n  alignItems: 'flex-start'\r\n}\r\n\r\nconst radioStyle = {\r\n  padding: '5px'\r\n}\r\n\r\nconst itemsList = {\r\n  display: 'flex',\r\n  flexFlow: 'nowrap column',\r\n  alignItems: 'flex-start',\r\n  paddingLeft: '20px'\r\n}\r\n\r\nconst radioButtonStyle = {\r\n  cursor: 'pointer',\r\n  top: '0',\r\n  left: '0',\r\n  height: '30px',\r\n  width: '30px',\r\n  borderRadius: '50%',\r\n  backgroundColor: '#eee',\r\n  opacity: '1',\r\n}\r\n\r\nconst textareaStyle = {\r\n  font: 'sans-serif',\r\n  borderRadius: '20px',\r\n  border: '3px black solid',\r\n}\r\n\r\nlet answers = props.answers.map((item, index) => {\r\n  return (\r\n    <div style={radioStyle} key={item}> <input index={index} style={radioButtonStyle} name={props.question} type=\"radio\" value={item}/> {item}</div>\r\n  )\r\n})\r\n\r\nif(!answers) {\r\n  answers = <textarea style={textareaStyle} className=\"answer\"></textarea>;\r\n}\r\n\r\nreturn (\r\n  <div style={questionStyle} className=\"question\" id={props.questionId}>\r\n    <div style={itemsList}>\r\n      <h1>Question {props.index+1}</h1>\r\n      <h4>{props.question}</h4>\r\n      {answers}\r\n    </div>\r\n  </div>\r\n)\r\n\r\n}\r\n\r\nexport default question;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://cc-tefl.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n","import React, {Component} from 'react';\r\nimport Question from '../Components/Question';\r\nimport instance from '../Utility/auxiliary';\r\n\r\nclass Quiz extends Component {\r\n\r\n  state = {\r\n    content: null,\r\n    testIsComplete: false,\r\n    completeTest: [],\r\n    answers: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    console.log(this.props);\r\n    console.log(this.props.location.state);\r\n    let array = [];\r\n    let quiz = this.props.quiz || this.props.location.state.content.quiz;\r\n    console.log(quiz);\r\n    for(var i = 0; i < quiz.length; i++) {\r\n      array.push(quiz[i].correctAnswerIndex)\r\n    }\r\n\r\n    await this.setState({\r\n      content: quiz,\r\n      loaded: true,\r\n      answers: array\r\n    });\r\n  }\r\n\r\n  handleRadialClick(e, index, question) {\r\n    let completeTestCopy = this.state.completeTest;\r\n\r\n    const questionObject = {\r\n      answerCode: index,\r\n      selected: e.target.value\r\n    }\r\n\r\n    if(this.state.completeTest.length < 1) {\r\n      console.log('new array!');\r\n      completeTestCopy.push(questionObject);\r\n    } else {\r\n      for(var i = 0; i < completeTestCopy.length; i++) {\r\n        if(completeTestCopy[i].answerCode === index) {\r\n          console.log('already in array');\r\n          completeTestCopy[i] = questionObject;\r\n        } else {\r\n          console.log('not in array');\r\n          completeTestCopy.push(questionObject);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      completeTest: completeTestCopy\r\n    })\r\n  }\r\n\r\n  testComplete(array, answers, complete) {\r\n    console.log(arguments);\r\n    this.setState({\r\n      answers: array,\r\n      correctAnswerList: answers,\r\n      displayAnswers: true,\r\n      displayQuiz: false\r\n    })\r\n  }\r\n\r\n  async handleFormSubmit(e) {\r\n    e.preventDefault();\r\n    var array = [];\r\n    for(var i = 0; i < e.target.length; i++) {\r\n      if(e.target[i].checked) {\r\n        var answer = e.target[i].value;\r\n        var answerCode = e.target[i].getAttribute('index');\r\n        var item = {answer, correct: null, answerCode};\r\n        array.push(item);\r\n      }\r\n    }\r\n    if(array.length < this.state.answers.length) {\r\n      this.setState({\r\n        errorMessage: 'please fill out every question!'\r\n      })\r\n      return;\r\n    }\r\n\r\n    for(var j = 0; j < this.state.answers.length; j++) {\r\n      if(this.state.answers[j] == array[j].answerCode) {\r\n        array[j].correct = true;\r\n      } else {\r\n        array[j].correct = false;\r\n      }\r\n      await this.setState({\r\n        completeTest: array,\r\n        testIsComplete: true\r\n      })\r\n    }\r\n    array = [1,2,3]\r\n    console.log(this.props);\r\n    this.testComplete(array, this.state.completeTest);\r\n    instance.post(`/${this.props.name}/introQuizAnswers.json`, {answers: array, completedAt: new Date()})\r\n    .then(res => {\r\n      console.log(res);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let questions = null;\r\n    if(this.state.loaded) {\r\n      questions = this.state.content.map((item, index) => {\r\n        return (\r\n          <Question question={item.question} key={index} index={index} answers={item.answers || null}/>\r\n        );\r\n      })\r\n    } else {\r\n      questions = (<div><p>something went wrong</p></div>)\r\n    }\r\n    let displayValue = 'block';\r\n    // if(this.props.displayQuiz) {\r\n    //   displayValue = 'block'\r\n    // } else {\r\n    //   displayValue = 'none'\r\n    // }\r\n\r\n    return (\r\n      <div className=\"quiz\" style={{\r\n        display: displayValue,\r\n        marginLeft: '100px',\r\n        width: '400px',\r\n        height: 'auto',\r\n        padding: '10px'\r\n      }}>\r\n        <form onSubmit={(e) => this.handleFormSubmit(e)}>\r\n        {questions}\r\n        <p style={{color: 'red'}}>{this.state.errorMessage}</p>\r\n        <input style={{\r\n          cursor: 'pointer',\r\n          padding: '20px',\r\n          margin: '20px',\r\n          borderRadius: '20px',\r\n          color: 'white',\r\n          border: 'none',\r\n          backgroundColor: 'blue'\r\n        }}\r\n          type=\"submit\" value=\"Submit Answers\"/>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\n\r\nfunction answer(props) {\r\n\r\n  let answerStyle = {\r\n    color: props.correct ? 'green' : 'red',\r\n  };\r\n  let containerStyle = {\r\n    border: '1px solid black',\r\n    borderRadius: '20px',\r\n    marginBottom: '20px'\r\n  }\r\n  return (\r\n    <div className=\"answer\" style={containerStyle}>\r\n      <h1>Question {props.index+1}</h1>\r\n      <p style={{fontSize: '24px'}}>{props.correct ? '✅': '❌'}</p>\r\n      <h4><em>{props.question}</em></h4>\r\n      <h4 style={answerStyle}>{props.answer}</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default answer;\r\n","import React, {Component} from 'react';\r\nimport Answer from '../Components/Answer';\r\nimport instance from '../Utility/auxiliary';\r\n\r\nclass Answers extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      userResponse: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n  }\r\n\r\n  render() {\r\n    let answers = null;\r\n    if(this.props.displayAnswers) {\r\n      window.scrollTo(0,0)\r\n      answers = this.props.answers.map((item, index) => {\r\n        return (\r\n          <Answer question={this.props.answers[index].question} key={index} index={index} correct={item.correct} answer={item.answer}/>\r\n        )\r\n      })\r\n    }\r\n    return(\r\n      <div className=\"answersPage\">\r\n        {answers}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Answers;\r\n","import axios from 'axios';\r\n\r\nconst authInstance = axios.create({\r\n  baseURL:'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD_M3vdOf4elHSHpBnVxO6D0vpEIN5wM0U'\r\n});\r\n\r\nexport default authInstance;\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Auth.css';\r\n\r\nimport instance from '../Utility/auxiliary';\r\nimport authInstance from '../Utility/authentication';\r\nimport {updateObject} from '../Utility/updateObject';\r\nimport axios from 'axios';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          login: true,\r\n          type:'email',\r\n          placeholder: 'Your E-mail Address',\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      firstname: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          login: false,\r\n          type: 'text',\r\n          placeholder:'FirstName'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 2\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: 'password',\r\n        elementConfig: {\r\n          login: true,\r\n          type:'password',\r\n          placeholder: 'Password'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      confirmPassword: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          login: false,\r\n          type:'password',\r\n          placeholder: 'Confirm Password'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    isSignup:true,\r\n    errorMessage: null\r\n  }\r\n\r\n  toggleAuthModeHandler() {\r\n    this.setState(prevState => ({\r\n      isSignup: !prevState.isSignup\r\n    }))\r\n    this.clearControls();\r\n  }\r\n\r\n  clearControls() {\r\n    let controlsCopy = this.state.controls;\r\n    for(var key in controlsCopy) {\r\n      controlsCopy[key].value = ''\r\n    }\r\n    this.setState({\r\n      controls: controlsCopy\r\n    })\r\n  }\r\n\r\n  resetPasswordHandler() {\r\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyD_M3vdOf4elHSHpBnVxO6D0vpEIN5wM0U', {requestType: 'PASSWORD_RESET', email: ''})\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          errorMessage: 'check your email for a password reset link'\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  checkValidity = ( value, rules ) => {\r\n      let isValid = true;\r\n      if ( !rules ) {\r\n          return true;\r\n      }\r\n\r\n      if ( rules.required ) {\r\n          isValid = value.trim() !== '' && isValid;\r\n      }\r\n\r\n      if ( rules.minLength ) {\r\n          isValid = value.length >= rules.minLength && isValid\r\n      }\r\n\r\n      if ( rules.maxLength ) {\r\n          isValid = value.length <= rules.maxLength && isValid\r\n      }\r\n\r\n      if ( rules.isEmail ) {\r\n          const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n          isValid = pattern.test( value ) && isValid\r\n      }\r\n\r\n      if ( rules.isNumeric ) {\r\n          const pattern = /^\\d+$/;\r\n          isValid = pattern.test( value ) && isValid\r\n      }\r\n\r\n      return isValid;\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.loadingStart();\r\n    var data = {};\r\n    for(var key in this.state.controls) {\r\n      if(this.state.controls[key].value && this.state.controls[key].valid) {\r\n        data[key] = this.state.controls[key].value;\r\n      }\r\n    }\r\n\r\n    if(this.state.isSignup && data.password !== data.confirmPassword) {\r\n      this.setState({\r\n        errorMessage: 'Passwords do not match'\r\n      })\r\n      this.props.doneLoading();\r\n      throw new Error('Passwords do not match');\r\n    }\r\n\r\n    const authData = {\r\n      email: data.email,\r\n      password: data.password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    if(this.state.isSignup) {\r\n\r\n      axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD_M3vdOf4elHSHpBnVxO6D0vpEIN5wM0U',authData)\r\n      .then(res => {\r\n        this.props.onAuth(res.data.idToken, res.data.localId, res.data.expiresIn)\r\n        console.log(authData);\r\n        instance.post(``)\r\n          .then(res => {console.log(res);})\r\n          .catch(err => {console.log(err);});\r\n        this.props.doneLoading();\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.props.doneLoading();\r\n      })\r\n    } else {\r\n      axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD_M3vdOf4elHSHpBnVxO6D0vpEIN5wM0U', authData)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.props.onAuth(res.data.idToken, res.data.localId, res.data.expiresIn)\r\n        this.props.doneLoading();\r\n      }).catch(err => {\r\n        console.log(err);\r\n        this.props.doneLoading();\r\n      })\r\n    }\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n        touched: true\r\n      }\r\n    };\r\n    this.setState({controls: updatedControls});\r\n  }\r\n\r\n  render() {\r\n    let authRedirect = null;\r\n    if(this.props.validAuth) {\r\n      authRedirect = <Redirect to=\"/\"/>\r\n    }\r\n\r\n\r\n    const formElementsArray = [];\r\n\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      })\r\n    }\r\n\r\n    let form;\r\n    if(this.state.isSignup) {\r\n      form = formElementsArray.map(formElement => {\r\n        return (\r\n          <input\r\n          key={formElement.id}\r\n          type={formElement.config.elementConfig.type}\r\n          placeholder={formElement.config.elementConfig.placeholder}\r\n          elementtype={formElement.config.elementType}\r\n          elementconfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          onChange={( event ) => this.inputChangedHandler( event, formElement.id )} />\r\n        )\r\n      })\r\n    } else {\r\n      form = formElementsArray.map(formElement => {\r\n        if( formElement.config.elementConfig.login ) {\r\n          return (\r\n            <input\r\n            key={formElement.id}\r\n            type={formElement.config.elementConfig.type}\r\n            placeholder={formElement.config.elementConfig.placeholder}\r\n            elementtype={formElement.config.elementType}\r\n            elementconfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            onChange={( event ) => this.inputChangedHandler( event, formElement.id )} />\r\n          )\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div className=\"auth\">\r\n      {authRedirect}\r\n        <h1>{this.state.isSignup ? 'Register' : 'Login'} </h1>\r\n        <form onSubmit={this.handleSubmit} id=\"authFormContainer\">\r\n          {form}\r\n          <input type=\"submit\" value=\"submit\"/>\r\n        </form>\r\n        <button id='submitButton' onClick={() => this.toggleAuthModeHandler()}>{this.state.isSignup ? \"Got an account? Click here to switch to login\" : \"Don't have an account? Click here to create one\"}</button>\r\n        <p style={{color: 'red'}}>{this.state.errorMessage}</p>\r\n        {//// TODO: make a modal for error in signing in\r\n        }\r\n      { /* <a style={{\r\n          textDecoration: 'underline',\r\n          cursor: 'pointer'\r\n        }} onClick={() => this.resetPasswordHandler()}>Click here to reset your password</a> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Auth;\r\n","\r\nconst quiz = {\r\n     \"id\": \"0\",\r\n     \"type\": \"quiz\",\r\n     \"location\": {\r\n       \"postcode/ZIPcode\": \"2830\",\r\n       \"country\": \"australia\",\r\n       \"state/province\": \"new south wales\",\r\n       \"town/city\": \"Dubbo\",\r\n       \"organisation/employer\": \"department of education and training\",\r\n       \"street address\": \"Myall St\",\r\n     },\r\n     \"name\": \"introQuiz\",\r\n     \"description\": \"The quiz to test your skills!\",\r\n     \"tags\": \"\",\r\n     \"quiz\": [\r\n     {\r\n      \"question\": \"Can I park here?\",\r\n      \"answers\": [\r\n        \"Sorry, I did that\",\r\n        \"It's the same place\",\r\n        \"Only for half an hour\",\r\n      ],\r\n      \"correctAnswerIndex\": 2,\r\n    },\r\n     {\r\n      \"question\": \"What colour will you paint the children's bedroom?\",\r\n      \"answers\": [\r\n        \"I hope it was right\",\r\n        \"We can't decide\",\r\n        \"It wasn't very difficult\",\r\n      ],\r\n      \"correctAnswerIndex\": 1,\r\n    },\r\n      {\r\n      \"question\": \"Shall we go the gym now?\",\r\n      \"answers\": [\r\n        \"I'm too tired\",\r\n        \"It's very good\",\r\n        \"Not at all\"\r\n      ],\r\n      \"correctAnswerIndex\": 0\r\n    },\r\n      {\r\n      \"question\": \"His eyes were .... bad that he couldn't read the number plate of the car in front.\",\r\n      \"answers\": [\r\n        \"such\",\r\n        \"too\",\r\n        \"so\",\r\n        \"very\"\r\n      ],\r\n      \"correctAnswerIndex\": 2\r\n    },\r\n     {\r\n      \"question\" : \"The company needs to decide .... and for all what its position is on this issue.\",\r\n      \"answers\" : [\r\n        \"here\",\r\n        \"once\",\r\n        \"first\",\r\n        \"finally\"\r\n      ],\r\n      \"correctAnswerIndex\": 1\r\n    },\r\n     {\r\n      \"question\" : \"Don't put your cup on the .... of the table - someone will knock it off\",\r\n      \"answers\" : [\r\n        \"outside\",\r\n        \"edge\",\r\n        \"boundary\",\r\n        \"border\"\r\n      ],\r\n      \"correctAnswerIndex\": 1\r\n    },\r\n     {\r\n      \"question\" : \"The singer ended the concert .... her most popular song\",\r\n      \"answers\" : [\r\n        \"by\",\r\n        \"with\",\r\n        \"in\",\r\n        \"as\"\r\n      ],\r\n      \"correctAnswerIndex\": 1\r\n    },\r\n     {\r\n      \"question\" : \"The shop didn't have the shoes I wanted, but they've .... a pair specially for me.\",\r\n      \"answers\" : [\r\n        \"ordered\",\r\n        \"booked\",\r\n        \"commanded\",\r\n        \"asked\"\r\n      ],\r\n      \"correctAnswerIndex\": 0\r\n    },\r\n     {\r\n      \"question\" : \"Have you got time to discuss your work now or are you .... to leave?\",\r\n      \"answers\" : [\r\n        \"thinking\",\r\n        \"round\",\r\n        \"planned\",\r\n        \"about\"\r\n      ],\r\n      \"correctAnswerIndex\": 3\r\n    },\r\n     {\r\n      \"question\" : \"She came to live here .... a month ago\",\r\n      \"answers\" : [\r\n        \"quite\",\r\n        \"beyond\",\r\n        \"already\",\r\n        \"almost\"\r\n      ],\r\n      \"correctAnswerIndex\": 3\r\n    },\r\n      {\r\n      \"question\": \"I left my last job because I had no .... to travel.\",\r\n      \"answers\" : [\r\n        \"place\",\r\n        \"position\",\r\n        \"opportunity\",\r\n        \"possibility\"\r\n      ],\r\n      \"correctAnswerIndex\": 2\r\n    },\r\n     {\r\n      \"question\" : \"It wasn't a bad crash and a .... damage was done to my car.\",\r\n      \"answers\" : [\r\n        \"little\",\r\n        \"small\",\r\n        \"light\",\r\n        \"mere\"\r\n      ],\r\n      \"correctAnswerIndex\": 0\r\n    },\r\n     {\r\n      \"question\" : \"I'd rather you .... to her why we can't go.\",\r\n      \"answers\" : [\r\n        \"can explain\",\r\n        \"explained\",\r\n        \"to explain\",\r\n        \"will explain\"\r\n      ],\r\n      \"correctAnswerIndex\": 1\r\n    },\r\n     {\r\n      \"question\" : \"Before making a decision, the leader considered all .... of the arguments\",\r\n      \"answers\" : [\r\n        \"sides\",\r\n        \"features\",\r\n        \"perspectives\",\r\n        \"shades\"\r\n      ],\r\n      \"correctAnswerIndex\": 0\r\n    },\r\n     {\r\n      \"question\" : \"This new printer is recommended as being .... reliable.\",\r\n      \"answers\" : [\r\n        \"greatly\",\r\n        \"highly\",\r\n        \"strongly\",\r\n        \"readily\"\r\n      ],\r\n      \"correctAnswerIndex\": 1\r\n    },\r\n      {\r\n      \"question\": \"What is a 'verb' in the English language?\",\r\n      \"answers\": [\r\n        \"A name for a person, place, or thing\",\r\n        \"A word used to describe a person, place or thing\",\r\n        \"A word for an action\"\r\n      ],\r\n      \"correctAnswerIndex\": 2\r\n    },\r\n      {\r\n      \"question\": \"What is a 'noun' in the English language?\",\r\n      \"answers\": [\r\n        \"A name for a person, place, or thing\",\r\n        \"A word used to describe a person, place or thing\",\r\n        \"A word for an action\"\r\n      ],\r\n      \"correctAnswerIndex\": 0\r\n    },\r\n      {\r\n      \"question\": \"What is an 'adjective' in the English language?\",\r\n      \"answers\": [\r\n        \"A name for a person, place, or thing\",\r\n        \"A word used to describe a person, place or thing\",\r\n        \"A word for an action\"\r\n      ],\r\n      \"correctAnswerIndex\": 1\r\n    },\r\n      {\r\n      \"question\": \"What word is the 'subject' of the following sentence: The dog jumped over the fox\",\r\n      \"answers\": [\r\n        \"dog\",\r\n        \"fox\",\r\n        \"jumped\",\r\n        \"the\"\r\n      ],\r\n      \"correctAnswerIndex\": 0\r\n    },\r\n      {\r\n      \"question\": \"What word is the 'object' of the following sentence: Daniel filled out the paperwork\",\r\n      \"answers\": [\r\n        \"Daniel\",\r\n        \"filled\",\r\n        \"the\",\r\n        \"paperwork\"\r\n      ],\r\n      \"correctAnswerIndex\": 3\r\n    },\r\n      {\r\n      \"question\": \"What is the tense of the following sentence: Jamie walked home last tuesday\",\r\n      \"answers\": [\r\n       \"Present\",\r\n       \"Past\",\r\n       \"Future\"\r\n      ],\r\n      \"correctAnswerIndex\": 1\r\n    },\r\n  ]\r\n}\r\n\r\nexport default quiz;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst QuizList = (props) => {\r\n  let listContent = null;\r\n  if(props.quizzes) {\r\n    console.log(props.quizzes);\r\n    listContent = props.quizzes.map(item => {\r\n      return (\r\n        <div key={item.id}>\r\n          <Link to={{\r\n            pathname:`/homework/quiz/${item.name}`,\r\n            state: {\r\n              fromHomeworkPage: true,\r\n              content: item.content\r\n            }\r\n          }}>The first quiz to test your skills</Link>\r\n          <p>{item.description}</p>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"quizList\">\r\n      {listContent}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuizList;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Nav.css';\r\nimport {Transition} from 'react-transition-group';\r\n\r\n\r\nconst Nav = props => {\r\n  const duration = 150;\r\n\r\n  const defaultStyle = {\r\n    transition: `transform ${duration}ms ease-in-out`,\r\n    transform: 'translateX(0px)',\r\n  }\r\n\r\n  const transitionStyles = {\r\n    entering:{ transform: 'translateX(0px)'},\r\n    entered: { transform: 'translateX(0px)'},\r\n    exiting: { transform: 'translateX(0px)'},\r\n    exited:  { transform: 'translateX(-115px)'},\r\n  };\r\n\r\n  return (\r\n    <Transition\r\n      in={props.showNavBar}\r\n      timeout={duration}\r\n    >\r\n      {state => (\r\n        <nav\r\n          id=\"navbar\"\r\n          style={{\r\n            ...defaultStyle,\r\n            ...transitionStyles[state]\r\n          }}\r\n          >\r\n          {props.validAuth ? <a onClick={e => props.onLogout(e)} className=\"navLink\" href=\"/\">Logout</a> : <Link to=\"/auth\" className=\"navLink\">Login</Link> }\r\n          <Link to=\"/about\" className=\"navLink\">About</Link>\r\n          {\r\n            props.validAuth ?\r\n            <>\r\n            <Link to=\"/homework\" className=\"navLink\">Homework</Link>\r\n            <Link to=\"/exercises\" className=\"navLink\">Exercises</Link>\r\n            <Link to=\"/reading\" className=\"navLink\">Reading</Link>\r\n            </>\r\n            : null\r\n          }\r\n          <button\r\n            id=\"drawerToggle\"\r\n            onClick={props.toggleNavBar}\r\n          >\r\n            <span id=\"drawerToggleArrow\">{props.showNavBar ? '<' : '>'}</span>\r\n          </button>\r\n      </nav>)}\r\n    </Transition>\r\n  )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './HwItem.css';\r\n\r\nconst HwItem = (props) => {\r\n    return (\r\n      <Link to={{\r\n        pathname: `/homework/${props.type}/${props.title}`,\r\n        state: {\r\n          formHomeworkPage: true,\r\n          content: props.content\r\n        }\r\n      }}>\r\n        <div className=\"hwCard\">\r\n          <h1>{props.content.name}</h1>\r\n          <p>{props.content.description}</p>\r\n          <p><em>{props.content.type}</em></p>\r\n        </div>\r\n      </Link>\r\n    )\r\n}\r\n\r\nexport default HwItem;\r\n","\r\nconst testQuiz = {\r\n     \"id\": \"0\",\r\n     \"type\": \"quiz\",\r\n     \"location\": {\r\n       \"postcode/ZIPcode\": \"2830\",\r\n       \"country\": \"australia\",\r\n       \"state/province\": \"new south wales\",\r\n       \"town/city\": \"Dubbo\",\r\n       \"organisation/employer\": \"department of education and training\",\r\n       \"street address\": \"Myall St\",\r\n     },\r\n     \"name\": \"introQuiz\",\r\n     \"description\": \"The quiz to test your skills!\",\r\n     \"tags\": \"\",\r\n     \"quiz\": [\r\n     {\r\n      \"question\": \"Can I park here?\",\r\n      \"answers\": [\r\n        \"Sorry, I did that\",\r\n        \"It's the same place\",\r\n        \"Only for half an hour\",\r\n      ],\r\n      \"correctAnswerIndex\": 2,\r\n    },\r\n  ]\r\n}\r\n\r\nexport default testQuiz;\r\n","import React from 'react';\r\nimport Quiz from '../Containers/Quiz';\r\nimport QuizList from './QuizList';\r\nimport instance from '../Utility/auxiliary';\r\nimport HwItem from './HwItem';\r\nimport quiz from '../Assets/Quizzes/introQuiz';\r\nimport testQuiz from '../Assets/Quizzes/testQuiz';\r\n\r\nconst Homework = props => {\r\n  const quizzes = [quiz]\r\n  const homeworkItems = quizzes.map((item, index) => {\r\n    return null;\r\n  });\r\n\r\n  return (\r\n    <div className=\"homework\" key={Math.random()}>\r\n      <h1>Homework</h1>\r\n      <HwItem title={'introQuiz'} type={'quiz'} content={testQuiz} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homework;\r\n","import React from 'react';\r\n\r\n\r\nconst Exercises = props => {\r\n  return (\r\n    <div className=\"homework\">\r\n      <h1>Exercises</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Exercises;\r\n","import React from 'react';\r\n\r\n\r\nconst Reading = props => {\r\n  return (\r\n    <div className=\"homework\">\r\n      <h1>Reading</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reading;\r\n","import React from 'react';\r\n\r\n\r\nconst About = props => {\r\n  return (\r\n    <div className=\"homework\">\r\n      <h1>About</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Quiz from './Containers/Quiz';\nimport Answers from './Containers/Answers';\nimport Auth from './Containers/Auth';\nimport instance from './Utility/auxiliary';\nimport quiz from './Assets/Quizzes/introQuiz';\nimport QuizList from './Components/QuizList';\nimport Spinner from './Shared/UI/Spinner'\nimport Nav from './Components/Nav';\n\nimport Homework from './Components/Homework';\nimport Exercises from './Components/Exercises';\nimport Reading from './Components/Reading';\nimport About from './Components/About';\n\nimport {BrowserRouter,Switch, Route, Redirect} from 'react-router-dom';\n\n\nclass App extends Component {\n  state = {\n    firstname: '',\n    idToken: '',\n    localId: '',\n    isAuthenticated: false,\n    nameEntered: false,\n    hideRegister: false,\n    displayAnswers: false,\n    displayQuiz: true,\n    loading: false,\n    errorMessage: '',\n    showNavBar: true,\n  }\n\n  componentDidMount() {\n    window.scrollTo(0,0);\n    this.checkAuthState();\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    })\n  }\n\n  stopLoading() {\n    this.setState({\n      loading: false\n    })\n  }\n\n  checkAuthTimeout(expirationTime) {\n    setTimeout(() => {\n      console.log('session has expired');\n      this.logoutHandler();\n    }, expirationTime * 1000)\n  }\n\n  checkAuthState() {\n    const token = localStorage.getItem('token');\n    const localId = localStorage.getItem('localId');\n    if(!token || !localId) {\n      this.logoutHandler();\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if(expirationDate < new Date()) {\n        this.logoutHandler();\n      } else {\n        this.checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000);\n        this.setState({\n          isAuthenticated: true,\n          idToken: token,\n          localId: localId\n        })\n      }\n    }\n  }\n\n  handleAuthSubmit(token, localId, expiresIn) {\n    if(!token || !localId) {\n      throw new Error('No token(s) to submit!')\n    }\n    const expirationDate = new Date(new Date().getTime() +  expiresIn * 1000);\n    this.setState({\n      localId: localId,\n      token: token,\n      isAuthenticated: true\n    })\n    this.checkAuthTimeout(expiresIn);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationDate', expirationDate);\n    localStorage.setItem('localId', localId);\n    this.stopLoading();\n  }\n\n  logoutHandler(e) {\n    if(e) {\n      e.preventDefault();\n    }\n    console.log('logged out');\n    this.setState({\n      firstname: null,\n      idToken: null,\n      localId: null,\n      expirationTime: null,\n      isAuthenticated: false\n    })\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('localId');\n    this.stopLoading();\n  }\n\n  toggleNavBar() {\n    this.setState(prevState => {\n      return {showNavBar: !prevState.showNavBar}\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if(e.target[0].value.length === 0) {\n      this.setState({\n        errorMessage: 'Please enter a name'\n      })\n    }\n\n    const name = e.target[0].value;\n    instance.post(`/${name}.json`,{firstname: name, beganAt: new Date()})\n    .then(res => {\n      console.log('response', res);\n      this.setState({\n        hideRegister: true,\n        displayQuiz: true,\n        name: name\n      })\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorMessage: 'there is an error!'\n      })\n    })\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <div id=\"component\">\n          <Route exact path=\"/auth\"\n            render={() => <Auth\n              loadingStart={() => this.startLoading()}\n              doneLoading={() => this.stopLoading()}\n              onAuth={(token, localId, expiresIn) => this.handleAuthSubmit(token, localId, expiresIn)}\n              validAuth={this.state.isAuthenticated}\n            />\n          }/>\n          <Route exact path=\"/about\" render={() => <About/>}/>\n          <Redirect to=\"/\" />\n        </div>\n      </Switch>\n    )\n    if(this.state.isAuthenticated) {\n      routes = (\n        <Switch>\n          <div id=\"component\">\n            <Route exact path=\"/auth\"\n              render={() => <Auth\n                loadingStart={() => this.startLoading()}\n                doneLoading={() => this.stopLoading()}\n                onAuth={(token, localId, expiresIn) => this.handleAuthSubmit(token, localId, expiresIn)}\n                validAuth={this.state.isAuthenticated}\n              />\n            }/>\n            <Route exact path=\"/homework\" render={() => <Homework/>}/>\n            <Route exact path=\"/exercises\" render={() => <Exercises/>}/>\n            <Route exact path=\"/reading\" render={() => <Reading/>}/>\n            <Route exact path=\"/about\" render={() => <About/>}/>\n            <Route exact path=\"/library\" render={() => <QuizList/> }/>\n            <Route path=\"/homework/quiz/:quizName\"\n              component={Quiz}\n              testComplete={(array, completeTest) => this.testComplete(array, completeTest)}\n              displayQuiz={this.state.displayQuiz}\n              name={this.state.name}\n              // render={() => {\n              //   console.log('route for quiz render accessed');\n              //   return ( <div>\n              //         <Quiz\n              //           testComplete={this.state.testComplete}\n              //           displayQuiz={this.state.displayQuiz}\n              //           name={this.state.name}/>\n              //         <Answers\n              //           displayAnswers={this.state.displayAnswers}\n              //           answers={this.state.answers}\n              //           quiz={quiz}/>\n              //         </div>)}\n            />\n            <Route path=\"\"/>\n            <Redirect to=\"/\" />\n          </div>\n        </Switch>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n      <BrowserRouter>\n        <Nav\n          toggleNavBar={() => this.toggleNavBar()}\n          showNavBar={this.state.showNavBar}\n          onLogout={e => this.logoutHandler(e)}\n          validAuth={this.state.isAuthenticated}\n        />\n        {routes}\n      </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}